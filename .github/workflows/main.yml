name: Release to Staging Workflow

on:
  push:
    branches:
      - 'release/*'

jobs:
  merge-release-to-staging:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Merge release branch to staging
      run: git checkout staging && git merge ${{ github.ref }} --no-ff

    - name: Push changes to staging
      run: git push origin staging

  build-and-deploy-testflight:
    needs: merge-release-to-staging
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.1.app/Contents/Developer

    - name: Install dependencies
      run: bundle install && bundle exec pod install

    - name: Build and archive for TestFlight
      run: |
        xcodebuild clean -project GithubActionTest.xcodeproj -scheme GithubActionTest -configuration Release
        xcodebuild archive -project GithubActionTest.xcodeproj -scheme GithubActionTest -configuration Release -archivePath ${{ github.workspace }}/GithubActionTest.xcarchive

    - name: Export to TestFlight
      run: xcodebuild -exportArchive -archivePath ${{ github.workspace }}/GithubActionTest.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath ${{ github.workspace }}/build

    - name: Upload to TestFlight
      run: |
        xcrun altool --upload-app -f ${{ github.workspace }}/build/GithubActionTest.ipa -t ios -u ${{ secrets.APP_STORE_CONNECT_USERNAME }} -p ${{ secrets.APP_STORE_CONNECT_PASSWORD }}

  merge-staging-to-develop:
    needs: build-and-deploy-testflight
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Merge staging branch to develop
      run: git checkout develop && git merge staging --no-ff

    - name: Push changes to develop
      run: git push origin develop

  delete-release-branch:
    needs: merge-staging-to-develop
    runs-on: macos-latest

    steps:
    - name: Delete release branch
      run: git push origin --delete ${{ github.ref }}

  notify-teams:
    needs: delete-release-branch
    runs-on: ubuntu-latest

    steps:
    - name: Send notification to Microsoft Teams
      run: |
        curl -H 'Content-Type: application/json' -d '{"text": "Release branch merged and deployed to TestFlight successfully."}' ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
